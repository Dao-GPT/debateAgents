{"version":3,"file":"lib_index_js.7944edb5ab5b6076ee84.js","mappings":"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","sources":["webpack://@jupyterlite/xeus/./src/index.ts","webpack://@jupyterlite/xeus/./src/web_worker_kernel.ts"],"sourcesContent":["// Copyright (c) Thorsten Beier\n// Copyright (c) JupyterLite Contributors\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  IServiceWorkerManager,\n  JupyterLiteServer,\n  JupyterLiteServerPlugin\n} from '@jupyterlite/server';\nimport { IBroadcastChannelWrapper } from '@jupyterlite/contents';\nimport { IKernel, IKernelSpecs } from '@jupyterlite/kernel';\n\nimport { WebWorkerKernel } from './web_worker_kernel';\n\nconst EXTENSION_NAME = 'xeus';\nconst EXTENSION_STATIC_DIR = `../extensions/@jupyterlite/${EXTENSION_NAME}/static/`;\n\n// helper function to fetch json\nfunction getPkgJson(url: string) {\n  const json_url = EXTENSION_STATIC_DIR + url;\n  const xhr = new XMLHttpRequest();\n  xhr.open('GET', json_url, false);\n  xhr.send(null);\n  return JSON.parse(xhr.responseText);\n}\n\nlet kernel_dir: string[] = [];\ntry {\n  kernel_dir = getPkgJson('share/jupyter/kernels.json');\n} catch (err) {\n  console.log(err);\n  console.log('could not fetch share/jupyter/kernels/kernels.json');\n  kernel_dir = [];\n  throw err;\n}\nconsole.log(kernel_dir);\n\n// fetch kernel spec for each kernel\nconst kernel_specs = kernel_dir.map(kernel_dir => {\n  const spec: any = getPkgJson(\n    'share/jupyter/kernels/' + kernel_dir + '/kernel.json'\n  );\n  spec.name = kernel_dir;\n  spec.dir = kernel_dir;\n  spec.resources = {\n    'logo-32x32':\n      EXTENSION_STATIC_DIR +\n      'share/jupyter/kernels/' +\n      kernel_dir +\n      '/logo-32x32.png',\n    'logo-64x64':\n      EXTENSION_STATIC_DIR +\n      'share/jupyter/kernels/' +\n      kernel_dir +\n      '/logo-64x64.png'\n  };\n  return spec;\n});\n\nconsole.log(kernel_specs);\n\nconst server_kernels = kernel_specs.map(kernelspec => {\n  const server_kernel: JupyterLiteServerPlugin<void> = {\n    // use name from spec\n    id: `@jupyterlite/${kernelspec.name}-extension:kernel`,\n    autoStart: true,\n    requires: [IKernelSpecs],\n    optional: [IServiceWorkerManager, IBroadcastChannelWrapper],\n    activate: (\n      app: JupyterLiteServer,\n      kernelspecs: IKernelSpecs,\n      serviceWorker?: IServiceWorkerManager,\n      broadcastChannel?: IBroadcastChannelWrapper\n    ) => {\n      kernelspecs.register({\n        spec: kernelspec,\n        create: async (options: IKernel.IOptions): Promise<IKernel> => {\n          // const mountDrive = !!(\n          //   serviceWorker?.enabled && broadcastChannel?.enabled\n          // );\n          const mountDrive = false;\n\n          if (mountDrive) {\n            console.info(\n              `${kernelspec.name} contents will be synced with Jupyter Contents`\n            );\n          } else {\n            console.warn(\n              `${kernelspec.name} contents will NOT be synced with Jupyter Contents`\n            );\n          }\n\n          return new WebWorkerKernel({\n            ...options,\n            mountDrive,\n            kernelspec\n          });\n        }\n      });\n    }\n  };\n  return server_kernel;\n});\n\nconst plugins: JupyterLiteServerPlugin<any>[] = server_kernels;\n\nexport default plugins;\n","// Copyright (c) Thorsten Beier\n// Copyright (c) JupyterLite Contributors\n// Distributed under the terms of the Modified BSD License.\n\nimport { wrap } from 'comlink';\nimport type { Remote } from 'comlink';\n\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { PromiseDelegate } from '@lumino/coreutils';\n\nimport { PageConfig } from '@jupyterlab/coreutils';\nimport { KernelMessage } from '@jupyterlab/services';\n\nimport { IKernel } from '@jupyterlite/kernel';\n\ninterface IXeusKernel {\n  ready(): Promise<void>;\n\n  mount(driveName: string, mountpoint: string, baseUrl: string): Promise<void>;\n\n  cd(path: string): Promise<void>;\n\n  processMessage(msg: any): Promise<void>;\n}\n\nexport class WebWorkerKernel implements IKernel {\n  /**\n   * Instantiate a new WebWorkerKernel\n   *\n   * @param options The instantiation options for a new WebWorkerKernel\n   */\n  constructor(options: WebWorkerKernel.IOptions) {\n    console.log('constructing WebWorkerKernel kernel');\n    const { id, name, sendMessage, location } = options;\n    this._id = id;\n    this._name = name;\n    this._location = location;\n    this._kernelspec = options.kernelspec;\n    this._sendMessage = sendMessage;\n    console.log('constructing WebWorkerKernel worker');\n    this._worker = new Worker(new URL('./worker.js', import.meta.url), {\n      type: 'module'\n    });\n    console.log('constructing WebWorkerKernel done');\n\n    this._worker.onmessage = e => {\n      this._processWorkerMessage(e.data);\n    };\n\n    console.log('wrap');\n    this._remote = wrap(this._worker);\n    console.log('wrap done');\n\n    this._remote.processMessage({\n      msg: {\n        header: {\n          msg_type: '__initialize__'\n        },\n        kernelspec: this._kernelspec\n      }\n    });\n\n    console.log('init filesystem');\n    this.initFileSystem(options);\n\n    console.log('constructing WebWorkerKernel done2');\n  }\n\n  async handleMessage(msg: KernelMessage.IMessage): Promise<void> {\n    console.log('handleMessage', msg);\n    this._parent = msg;\n    this._parentHeader = msg.header;\n    console.log('send message to worker');\n    await this._sendMessageToWorker(msg);\n    console.log('send message to worker awaiting done');\n  }\n\n  private async _sendMessageToWorker(msg: any): Promise<void> {\n    // TODO Remove this??\n    if (msg.header.msg_type !== 'input_reply') {\n      this._executeDelegate = new PromiseDelegate<void>();\n    }\n\n    console.log(' this._remote.processMessage({ msg, parent: this.parent });');\n    await this._remote.processMessage({ msg, parent: this.parent });\n    console.log(\n      ' this._remote.processMessage({ msg, parent: this.parent }); done'\n    );\n    if (msg.header.msg_type !== 'input_reply') {\n      return await this._executeDelegate.promise;\n    }\n  }\n\n  /**\n   * Get the last parent header\n   */\n  get parentHeader():\n    | KernelMessage.IHeader<KernelMessage.MessageType>\n    | undefined {\n    return this._parentHeader;\n  }\n\n  /**\n   * Get the last parent message (mimick ipykernel's get_parent)\n   */\n  get parent(): KernelMessage.IMessage | undefined {\n    return this._parent;\n  }\n\n  /**\n   * Get the kernel location\n   */\n  get location(): string {\n    return this._location;\n  }\n\n  /**\n   * Process a message coming from the pyodide web worker.\n   *\n   * @param msg The worker message to process.\n   */\n  private _processWorkerMessage(msg: any): void {\n    console.log('processWorkerMessage', msg);\n    if (!msg.header) {\n      return;\n    }\n\n    msg.header.session = this._parentHeader?.session ?? '';\n    msg.session = this._parentHeader?.session ?? '';\n    this._sendMessage(msg);\n\n    // resolve promise\n    if (\n      msg.header.msg_type === 'status' &&\n      msg.content.execution_state === 'idle'\n    ) {\n      this._executeDelegate.resolve();\n    }\n  }\n\n  /**\n   * A promise that is fulfilled when the kernel is ready.\n   */\n  get ready(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  /**\n   * Return whether the kernel is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * A signal emitted when the kernel is disposed.\n   */\n  get disposed(): ISignal<this, void> {\n    return this._disposed;\n  }\n\n  /**\n   * Dispose the kernel.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._worker.terminate();\n    (this._worker as any) = null;\n    (this._remote as any) = null;\n    this._isDisposed = true;\n    this._disposed.emit(void 0);\n  }\n\n  /**\n   * Get the kernel id\n   */\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Get the name of the kernel\n   */\n  get name(): string {\n    return this._name;\n  }\n\n  private async initFileSystem(options: WebWorkerKernel.IOptions) {\n    let driveName: string;\n    let localPath: string;\n\n    if (options.location.includes(':')) {\n      const parts = options.location.split(':');\n      driveName = parts[0];\n      localPath = parts[1];\n    } else {\n      driveName = '';\n      localPath = options.location;\n    }\n\n    await this._remote.ready();\n\n    if (false || options.mountDrive) {\n      await this._remote.mount(driveName, '/drive', PageConfig.getBaseUrl());\n      await this._remote.cd(localPath);\n    }\n  }\n\n  private _kernelspec: any;\n  private _id: string;\n  private _name: string;\n  private _location: string;\n  private _remote: Remote<IXeusKernel>;\n  private _isDisposed = false;\n  private _disposed = new Signal<this, void>(this);\n  private _worker: Worker;\n  private _sendMessage: IKernel.SendMessage;\n  private _executeDelegate = new PromiseDelegate<void>();\n  private _parentHeader:\n    | KernelMessage.IHeader<KernelMessage.MessageType>\n    | undefined = undefined;\n  private _parent: KernelMessage.IMessage | undefined = undefined;\n}\n\n/**\n * A namespace for WebWorkerKernel statics.\n */\nexport namespace WebWorkerKernel {\n  /**\n   * The instantiation options for a Pyodide kernel\n   */\n  export interface IOptions extends IKernel.IOptions {\n    mountDrive: boolean;\n    kernelspec: any;\n  }\n}\n"],"names":[],"sourceRoot":""}